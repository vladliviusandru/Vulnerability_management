from django.db import models
from django.contrib.auth.models import User


# Create your models here.
class ToDoList(models.Model):
    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name="todolist", null=True)
    name = models.CharField(max_length=200)

    def __str__(self):
        return self.name


class Item(models.Model):
    todolist = models.ForeignKey(ToDoList, on_delete=models.CASCADE)
    text = models.CharField(max_length=300)
    complete = models.BooleanField()

    def __str__(self):
        return self.text


class Assets(models.Model):
    asset_id = models.BigAutoField(primary_key=True)
    name = models.CharField(max_length=100)
    type = models.CharField(max_length=20)

    Category = models.TextChoices('category',
                                  'Computers Mobiles Virtualized Networking Storage Others '
                                  )
    category = models.CharField(choices=Category.choices, max_length=20, default='Others')
    os = models.CharField(max_length=20, default='others')
    manufacturer = models.CharField(max_length=20)
    dnshostname = models.CharField(max_length=50)
    ip = models.GenericIPAddressField()


class SoftwareLicences(models.Model):
    license_id = models.BigAutoField(primary_key=True)
    device_id  = models.ForeignKey(Assets, on_delete=models.CASCADE)
    sw_name = models.CharField(max_length=20)
    publisher = models.CharField(max_length=20)

    Category = models.TextChoices('category',
                                  'Database OS Networking BIA App Others '
                                  )
    category = models.CharField(choices=Category.choices, max_length=20, default='Others')

    LICENSE_TYPES = [
        ('C', 'Commercial'),
        ('O', 'Open source')
    ]
    license_type = models.CharField(max_length=1, choices=LICENSE_TYPES, default='O')
    version = models.CharField(max_length=10, default='1.0')
    eol = models.DateField() #end of life


class TrafficVolumeHistory(models.Model):
    device_id = models.ForeignKey(Assets, on_delete=models.CASCADE)
    volume = models.DecimalField(max_digits= 10, decimal_places= 2, default=0)
    timestamp = models.DateTimeField()

